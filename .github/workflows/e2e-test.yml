name: End-to-End test

on:
  pull_request:
    branches: ['developer', 'master']
  workflow_call:
  schedule:
    - cron: '0 8 * * *'

permissions:
  contents: read # for checkout

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOSTNAME: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: test
  REDIS_HOSTNAME: redis
  REDIS_PORT: 6379

jobs:
  test:
    name: e2e Test
    runs-on: ubuntu-latest
    container: node:${{ vars.NODE_VERSION }}
    permissions:
      contents: read
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      redis:
        image: redis:7.2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup yarn
        uses: ./.github/actions/setup-yarn
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install dependencies
        run: yarn --immutable

      - name: Run Tests
        run: yarn test:e2e --ci --runInBand
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_HOSTNAME: ${{ env.POSTGRES_HOSTNAME }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
          NODE_ENV: ${{ vars.NODE_ENV }}
          EXPO_ACCESS_TOKEN: nothing
          REDIS_HOSTNAME: ${{ env.REDIS_HOSTNAME }}
          REDIS_PORT: ${{ env.REDIS_PORT }}
